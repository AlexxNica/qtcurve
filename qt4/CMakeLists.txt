if(ENABLE_QT4)
  find_package(Qt4 4.6.0 REQUIRED)
  if(QTC_ENABLE_X11 AND NOT Q_WS_X11)
    message(FATAL_ERROR "Qt4 Style with X11 require a Qt4 built with X11.")
  endif()
  # search packages used by KDE
  if(QTC_QT4_ENABLE_KDE)
    find_package(KDE4 REQUIRED)
    include(KDE4Defaults)
    set(QTCURVE_STYLE_DIR "${PLUGIN_INSTALL_DIR}/plugins/styles/")
    if(NOT QTC_ENABLE_X11 AND QTC_QT4_ENABLE_KWIN)
      message(WARNING "KWin support require QTC_ENABLE_X11 to be enabled.")
      set(QTC_QT4_ENABLE_KWIN Off)
    elseif(QTC_ENABLE_X11 AND NOT DEFINED QTC_QT4_ENABLE_KWIN)
      find_file(KWINGLOBALS_H kwinglobals.h ${KDE4_INCLUDES})
      if(KWINGLOBALS_H)
        set(QTC_QT4_ENABLE_KWIN On)
      else()
        set(QTC_QT4_ENABLE_KWIN Off)
      endif()
    endif()
  else()
    set(QTCURVE_STYLE_DIR "${QT_PLUGINS_DIR}/styles/")
  endif()
endif()

add_definitions(${QT_DEFINITIONS} -DQTC_UTILS_QT4)
include_directories(
  "${CMAKE_CURRENT_BINARY_DIR}"
  "${CMAKE_CURRENT_SOURCE_DIR}"
  "${QT_INCLUDE_DIR}")

if(QTC_QT4_ENABLE_KDE)
  add_definitions(${KDE4_DEFINITIONS})
  include_directories(${KDE4_INCLUDES})
endif()

if(QTC_ENABLE_X11)
  include_directories(${QTC_X11_INCLUDE_DIRS})
  add_definitions(${QTC_X11_CFLAGS})
  set(QTC_QT4_XCB_LINK_LIBS ${QTC_X11_LIBRARIES})
else()
  set(QTC_QT4_XCB_LINK_LIBS)
endif()

add_subdirectory(colors)
add_subdirectory(common)
add_subdirectory(config)
add_subdirectory(themes)
add_subdirectory(kwin)
add_subdirectory(kwinconfig)
add_subdirectory(style)
