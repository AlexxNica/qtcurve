AC_INIT(README)
PACKAGE=QtCurve-Gtk2
VERSION=0.53
AC_SUBST(VERSION)
AUTOMAKE_OPTIONS=no-dependencies
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AC_PREFIX_DEFAULT(/usr)

AM_CONFIG_HEADER(config.h)

dnl Initialize libtool
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
AM_PROG_LIBTOOL

AC_PATH_PROG(pkgconfig, pkg-config, no)
if test -n "$pkgconfig"; then
  GTK2_VERSION=`$pkgconfig --variable=gtk_binary_version gtk+-2.0`
  if test -n "$GTK2_VERSION"; then
    GTK2_CFLAGS=`$pkgconfig gtk+-2.0 --cflags`
    GTK2_LIBS=`$pkgconfig gtk+-2.0 --libs`
    GTK2_PREFIX="`$pkgconfig gtk+-2.0 --variable=prefix`"
    GTK2_LIBDIR="`$pkgconfig --variable=libdir gtk+-2.0`"
    AC_SUBST(GTK2_CFLAGS)
    AC_SUBST(GTK2_LIBS)
    AC_SUBST(GTK2_VERSION)
    AC_SUBST(GTK2_PREFIX)
    AC_SUBST(GTK2_LIBDIR)
  else
    AC_MSG_ERROR([Gtk2.x not installed])
  fi
else
  AC_MSG_ERROR([pkg-config not installed])
fi

AC_PATH_PROG(kde3config, [kde-config], [no])
if test "$kde3config" != "no" ; then
  KDE3_PREFIX="`$kde3config --prefix`/share/icons"
  AC_SUBST(KDE3_PREFIX)
fi

AC_PATH_PROG(kde4config, [kde4-config], [no])
if test "$kde4config" != "no" ; then
  KDE4_PREFIX="`$kde4config --prefix`/share/icons"
  AC_SUBST(KDE4_PREFIX)
fi

AC_PROG_CC
AC_PROG_INSTALL
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(limits.h unistd.h locale.h)
# Checks for endianness (needed by GdkRgb).
AC_C_BIGENDIAN

AC_TYPE_SIGNAL
AC_FUNC_MMAP

AC_ARG_ENABLE(kde-event-filter,
              AS_HELP_STRING([--enable-kde-event-filter],
                             [Enable receiving of KDE style change events]),
              [KDE_EVE_FILT="$enableval"], [KDE_EVE_FILT="no"])
if test "$KDE_EVE_FILT" = "yes"; then
    AC_DEFINE(QTC_ADD_EVENT_FILTER, 1, [Defines if you want KDE event filter])
fi

AC_ARG_ENABLE(mozilla-mods,
              AS_HELP_STRING([--enable-mozilla-mods],
                             [Enable mods to userChrome.css]),
              [MOZ_MODS="$enableval"], [MOZ_MODS="no"])
if test "$MOZ_MODS" = "yes"; then
    AC_DEFINE(QTC_MODIFY_MOZILLA, 1, [Defines if you want QtCurve to modify users userChrome.css])
fi

AC_ARG_ENABLE(mozilla-userjs,
              AS_HELP_STRING([--enable-mozilla-userjs],
                             [Enable mods to user.js]),
              [USER_JS_MODS="$enableval"], [USER_JS_MODS="no"])
if test "$USER_JS_MODS" = "yes"; then
    AC_DEFINE(QTC_MODIFY_MOZILLA_USER_JS, 1, [Defines if you want QtCurve to modify users user.js])
fi

AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ gtk2/Makefile ])
AC_OUTPUT

